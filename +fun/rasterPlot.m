function rasterPlot(SPIKE_DATA,INDS,INDEX_REMAP_INV,CLUSTERS_WITH_ROLES,TOTAL_T,NET)
%rasterPlot(SPIKE_DATA,INDS,INDEX_REMAP_INV,CLUSTERS_WITH_ROLES,TOTAL_T,NET)
%
%Generate a raster plot
%
%Make sure to grab a figure, clear it, and hold all before calling this
%function
% ex. figure(1); clf; hold all;
%     rasterPlot(...);
%
% Input SPIKE_DATA: matrix of spike data generated by @simulation
%
% Input INDS: structure containing vectors of indices telling which neurons
%     belong to which functional clusters (same as is passed to
%     @simulation)
%
% Input INDEX_REMAP_INV: matrix that allows for mapping between 'true'
%     neuron indices (first column) and 'plot' indices (second column),
%     outputted by local function @reMapIndex in lifNet script
%
% Input CLUSTERS_WITH_ROLES: vector of cluster indices assigned to roles
%     'S', 'Q', 'M', 'O', 'CL', 'CR', 'AL', 'AR' in that order
%
% Input TOTAL_T: integer giving the total time length [ms] of the trial,
%     not counting any warmup
%
% Input NET: structure containing the indices of neurons not in functional
%     clusters
%
% -LL
%

% plot E taste clusters
ind = [INDS.sucE,INDS.quiE,INDS.malE,INDS.octE];
temp = ismember(SPIKE_DATA(:,2),ind);
plot(SPIKE_DATA(temp,1)/1000,INDEX_REMAP_INV(SPIKE_DATA(temp,2),2),'k.','markersize',0.1);
text(TOTAL_T/1000+0.05,mean(INDEX_REMAP_INV(INDS.sucE,2)),'Suc','VerticalAlignment','middle','fontsize',12);
text(TOTAL_T/1000+0.05,mean(INDEX_REMAP_INV(INDS.quiE,2)),'Qui','VerticalAlignment','middle','fontsize',12);
text(TOTAL_T/1000+0.05,mean(INDEX_REMAP_INV(INDS.malE,2)),'Mal','VerticalAlignment','middle','fontsize',12);
text(TOTAL_T/1000+0.05,mean(INDEX_REMAP_INV(INDS.octE,2)),'Oct','VerticalAlignment','middle','fontsize',12);
% plot E cue left and action left clusters
ind = [INDS.cueLE,INDS.actLE];
temp = ismember(SPIKE_DATA(:,2),ind);
plot(SPIKE_DATA(temp,1)/1000,INDEX_REMAP_INV(SPIKE_DATA(temp,2),2),'g.','markersize',0.1);
text(TOTAL_T/1000+0.05,mean(INDEX_REMAP_INV(INDS.cueLE,2)),'Cue L','VerticalAlignment','middle','fontsize',12);
text(TOTAL_T/1000+0.05,mean(INDEX_REMAP_INV(INDS.actLE,2)),'Act L','VerticalAlignment','middle','fontsize',12);
% plot E cue right and action right clusters
ind = [INDS.cueRE,INDS.actRE];
temp = ismember(SPIKE_DATA(:,2),ind);
plot(SPIKE_DATA(temp,1)/1000,INDEX_REMAP_INV(SPIKE_DATA(temp,2),2),'b.','markersize',0.1);
text(TOTAL_T/1000+0.05,mean(INDEX_REMAP_INV(INDS.cueRE,2)),'Cue R','VerticalAlignment','middle','fontsize',12);
text(TOTAL_T/1000+0.05,mean(INDEX_REMAP_INV(INDS.actRE,2)),'Act R','VerticalAlignment','middle','fontsize',12);
% plot remaining E clusters
for clust = setdiff(1:NET.Q,CLUSTERS_WITH_ROLES)
    ind = NET.indE(clust):(NET.indE(clust+1)-1);
    temp = ismember(SPIKE_DATA(:,2),ind);
    plot(SPIKE_DATA(temp,1)/1000,INDEX_REMAP_INV(SPIKE_DATA(temp,2),2),'k.','markersize',0.1);
end
% plot background E neurons
ind = NET.indE(NET.Q+1):(NET.indE(NET.Q+2)-1);
temp = ismember(SPIKE_DATA(:,2),ind);
plot(SPIKE_DATA(temp,1)/1000,INDEX_REMAP_INV(SPIKE_DATA(temp,2),2),'k.','markersize',0.1);
% plot I neurons
ind = (NET.Ne+1):NET.N;
temp = ismember(SPIKE_DATA(:,2),ind);
plot(SPIKE_DATA(temp,1)/1000,INDEX_REMAP_INV(SPIKE_DATA(temp,2),2),'r.','markersize',0.1);
% visual formatting
yline(NET.Ne+0.5,'r');
yline(NET.N+0.5,'r');
set(gca,'fontsize',18,'tickdir','out','color','none','box','off');
yticks([]);
xlim([0, TOTAL_T/1000]); ylim([0, NET.N+1]);
end
